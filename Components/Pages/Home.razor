@page "/"
@rendermode InteractiveServer
@inject ActionHandlers.MadplanHandler MadplanHandler

<PageTitle>Madplan</PageTitle>

<h1>Madplan</h1>

<div class="container">
    <div class="row mt-5">
        @for (var i = 0; i <= retter.Count() - 1; i++)
        {
            var index = i;
            <div class="col m-1 p-2" style="background-color: lightgrey; border-radius: 5px;">
                <div style="height: 350px;">
                    <p class="text-center mt-2" style="text-transform: uppercase; font-weight: 300;">@dage[i]</p>
                    <hr>
                    <h6>@retter[i].Name</h6>
                    <i>@retter[i].Description</i>
                </div>
                <div class="text-center">
                    <button @onclick="() => Switch(index)" class="btn btn-outline-dark" style="width: 80px;">Skift</button>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private List<Models.Ret> retter = new List<Models.Ret>();
    private List<Models.Dag> dage = Models.Dage.AlleDage;

    protected override async Task OnInitializedAsync()
    {
        retter = MadplanHandler.GetMadplan();
        
        await Task.Delay(100);
    }

    private void Switch(int switchIndex)
    {
        retter = MadplanHandler.Switch(retter, switchIndex);
    }
}
